<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[HarveyNick]]></title>
  <link href="http://www.harveynick.com/atom.xml" rel="self"/>
  <link href="http://www.harveynick.com/"/>
  <updated>2012-01-06T00:02:05+00:00</updated>
  <id>http://www.harveynick.com/</id>
  <author>
    <name><![CDATA[Nick Johnson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fractal Errata]]></title>
    <link href="http://www.harveynick.com/blog/2010/10/22/fractal-errata/"/>
    <updated>2010-10-22T17:41:33+01:00</updated>
    <id>http://www.harveynick.com/blog/2010/10/22/fractal-errata</id>
    <content type="html"><![CDATA[<p>Some of the particularly sharp/anal ones amongst you might have noticed that while the technique for generating fractal lanscapes I <a href="http://harveynick.wordpress.com/2010/10/19/youre-speaking-my-landscape-baby/">previously described</a> works (and works well), it&#8217;s not 100% <em>correct</em>. Specifically, the fact that it uses the the same scaling factor for nodes created by the diamond and square steps isn&#8217;t quite right.</p>

<!-- more -->


<p>Why is this? Because they generate nodes which adhere to different levels of detail, that&#8217;s why. Lets go back to that last diagram for the post which described the algorithm:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/fractallandscape9.png"></p>

<p>Now while you&#8217;ll note that both steps add nodes that can be addressed using fractions with two as their denominator, the distance of the nodes created by the diamond step to their parents is greater than those created by the square step.</p>

<p>The nodes created by the square step are orthogonal to their parents, so the distance between them is proportional to a half, which as luck would have it has the same as the denominator as the fractions used to address the node. How convenient!</p>

<p>The nodes created by the diagonal step, on the other hand, are diagonal to their parents. This means that the distance to their parents is the pythagorean root of this same distance, so in this specific case:</p>

<blockquote><p>sqrt(½*½+½*½) = sqrt(¼+¼) = sqrt(½) = something</p></blockquote>

<p>Once again, the key fraction used to work this out has the same denominator as those used to address the node in the landscape. Thus, if d is equal to the denominator we&#8217;re using to address a node, the basic scaling factor used to offset a new node from its parents would be the following:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">diamond</span> <span class="n">step</span><span class="p">)</span> <span class="nb">range</span> <span class="o">=</span> <span class="p">[</span><span class="o">-</span><span class="n">sqrt</span><span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="n">d</span> <span class="o">*</span> <span class="mi">1</span><span class="o">/</span><span class="n">d</span> <span class="o">*</span> <span class="mi">2</span><span class="p">),</span><span class="err"> </span><span class="n">sqrt</span><span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="n">d</span> <span class="o">*</span> <span class="mi">1</span><span class="o">/</span><span class="n">d</span> <span class="o">*</span> <span class="mi">2</span><span class="p">)]</span>
</span><span class='line'><span class="k">else</span> <span class="nb">range</span> <span class="o">=</span> <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="o">/</span><span class="n">d</span><span class="p">,</span> <span class="mi">1</span><span class="o">/</span><span class="n">d</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>As I said before, this won&#8217;t make a lot of difference, but it will be more correct and that&#8217;s important to some people. Myself included.</p>

<p>For comparison purposes this is the effect this change has on the example landscape I&#8217;ve been using. The original landscape looks like this:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/image8.png"></p>

<p>The updated landscape looks like this:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/image11.png"></p>

<p>There&#8217;s some difference visible, but not a huge amount. Mostly, it&#8217;s just increased the range the data are occupying and expanded the bell curve accordingly. Hence, more high points and more low points, but the land is the same basic shape.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Now In Eye Popping 3D!]]></title>
    <link href="http://www.harveynick.com/blog/2010/10/22/now-in-eye-popping-3d/"/>
    <updated>2010-10-22T12:09:33+01:00</updated>
    <id>http://www.harveynick.com/blog/2010/10/22/now-in-eye-popping-3d</id>
    <content type="html"><![CDATA[<p>It took a little bit of fighting with bugs that weren&#8217;t showing up in the 2D view, and a bit of time to figure out what was going on with the lighting system in <a href="http://www.jmonkeyengine.org/">JME</a>, but I finally got the 3D display of the <a href="http://harveynick.wordpress.com/2010/10/20/some-random-landscapes/">fractal</a> working.</p>

<p>The first stage was just displaying each node as a discrete point so I could see that each was in about the right place. It looks a little bit like this:</p>

<!-- more -->


<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/simplegamescreenshot.png"></p>

<p>I did this by simply piping the spatial coordinates and colour information of each node into a pair of standard Java <a href="http://download.oracle.com/javase/1.4.2/docs/api/java/nio/FloatBuffer.html">FloatBuffers</a>, passing these to a JME Point class (which should really be called PointSet, in my opinion) and attaching this to the root display node of my JME <a href="http://bitbucket.org/harveynick/clockworkaphidjava/src/tip/src/com/clockworkaphid/display/threedimensional/PointDisplay.java">application</a>. The colouring scheme is the same as the one used for the 2D display. Some things don&#8217;t look quite right, largely due to the fact that I&#8217;ve just drawn the &#8220;underwater&#8221; points as blue, rather than adding any actual &#8220;water.&#8221; Don&#8217;t fret, it&#8217;s on the todo list.</p>

<p>That said, the landscape looks about right. All the points seem to be in their correct location. As a quick implementation note, I&#8217;m defining the <code>(x, y, z)</code> coordinates of the scene in the following way:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">x</span> <span class="o">=</span> <span class="n">east</span>
</span><span class='line'><span class="n">y</span> <span class="o">=</span> <span class="n">altitude</span>
</span><span class='line'><span class="n">z</span> <span class="o">=</span> <span class="o">-</span><span class="n">north</span>
</span></code></pre></td></tr></table></div></figure>


<p>With some scaling factors used to map the values from the <code>[0,1]</code> range used to address them to slightly more real world like dimensions.</p>

<p>The next stage was to display the landscape in wireframe to make sure the connections I&#8217;ll be using create a more solid looking polygon based display are all working correctly. Why not just go directly to polygons? You can see the the detail better in the wireframe display, making debugging much easier. I&#8217;ll definitely be using it again later.</p>

<p>This time, instead of piping each and every node into the vertex array, only the nodes at the highest level of detail are used. These are the nodes generated during the final &#8220;square stage&#8221; of the fractal algorithm, for those of you playing at home. Each draws a triangle (consisting of three separate lines) into the vertex buffer for each pair of parents it has in the landscape. The result looks something like this:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/simplegamescreenshot2-e1287747142352.png"></p>

<p>Everything seems to be in good order there, I think. One or two things don&#8217;t look quite right, particularly the beaches, but the tessellation and coverage of the polygons looks right. Here&#8217;s a closer in look at some of the polygons so you can see what the tessellation scheme actually produces:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/simplegamescreenshot4.png"></p>

<p>You can (hopefully) see that each of the &#8220;active&#8221; nodes sits at the centre of a diamond formed from the shape of its parents, so it&#8217;s the points with four lines branching from them (rather than eight) which are actually being used to draw the scene.</p>

<p>Next: polygons. Again, only the nodes at the highest level of detail are used. This time, each inserts itself into the vertex buffer, then adds its parents if they&#8217;re not in there already. Each node remembers its postion in the vertex buffer, and these indices are then used to draw the actual polygons. These are declared by passing the indices in sets of three into a standard Java <a href="http://download.oracle.com/javase/1.4.2/docs/api/java/nio/IntBuffer.html">IntBuffer</a>. The buffers are then passed to one of JME TriMesh geometry classes and displayed, like this:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/simplegamescreenshot1.png"></p>

<p>Again, the beaches don&#8217;t look quite right, but otherwise I&#8217;m reasonably pleased. I still need to add the actual water and improve the form of the landscape itself (and about a million other things), but in terms of display this is looking pretty good. Except for one thing: I&#8217;m using far more detail than I need to. Let me illustrate this with a slightly more extreme example. The pictures I&#8217;ve posed so far were generated using seven iterations of the diamond square algorithm. Here&#8217;s what happens when I use ten iterations (remember, the number of points increases exponentially):</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/simplegamescreenshot5-e1287704750521.png"></p>

<p>On the bright side the beaches look better, but that&#8217;s a lot of polygons. Far more then we actually need to display. 1579008 polygons, in fact. We need to reduce that somewhat, if we&#8217;re going to make things more complicated <em>and</em> maintain a reasonable frame rate (I&#8217;m getting about 60fps with this view at the moment). You can see the problem more clearly if I show you the same view using lines rather than polygons:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/simplegamescreenshot6-e1287704836984.png"></p>

<p>You can just about see the individual triangles up close, but further away the lines just mush together. I think we can afford to reduce the level of detail as we get further away, don&#8217;t you?</p>

<p>Well, I&#8217;ll get right on that, then&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Some Random Landscapes]]></title>
    <link href="http://www.harveynick.com/blog/2010/10/20/some-random-landscapes/"/>
    <updated>2010-10-20T15:50:46+01:00</updated>
    <id>http://www.harveynick.com/blog/2010/10/20/some-random-landscapes</id>
    <content type="html"><![CDATA[<p>I don&#8217;t have any 3D views of the <a href="http://harveynick.com/blog/2010/10/19/youre-speaking-my-landscape-baby/">fractal landscapes I&#8217;ve been making</a> to show you yet, as I&#8217;m still working through the different implementation options. I did get a little distracted with the 2D views of the landscape this morning, though, and play with the colouring scheme.</p>

<!-- more -->


<p>First of all, let&#8217;s start again with the example landscape used in yesterday&#8217;s post, only with slightly more sober colours and a bar on the right showing how the height values map to actual colours:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/image5.png"></p>

<p>Now that looks reasonably neat already, in a &#8220;my first atlas&#8221; kind of way, but clearly there&#8217;s a lot of information missing. We can see this if I plot the height values in monochrome, giving the landscape a more &#8220;plasma cloud&#8221; appearance:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/image6.png"></p>

<p>Now we can see the extra information, but we&#8217;ve lost a lot of the sense that what we&#8217;re looking at is a landscape. It looks more like a cloud. We can get some of that back by combining the two approaches and using different shades of blue and green:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/image7.png"></p>

<p>Now this looks a lot better. I think the water looks quite reasonable using this scheme, but the landscape is a bit&#8230; homogenous. Is every part of the land covered in grass? How boring!</p>

<p>We can make things a bit more interesting by adding a thin band of &#8220;sand&#8221; around the coast, and some &#8220;mountainy&#8221; colours (and snow!) higher up, like so:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/image8.png"></p>

<p>Now this looks better, the sand in particular. The mountains look okay, but not quite right. Something&#8217;s a little off. That&#8217;s not what mountains actually look like. We also don&#8217;t have any rivers or above sea level lakes. These are problems I&#8217;m going to look at later, after I get a reasonable 3D display system working. In the mean time, though, here are a couple more 2D landscapes for your viewing pleasure:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/image9.png"></p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/image10.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[You're Speaking My Landscape, Baby.]]></title>
    <link href="http://www.harveynick.com/blog/2010/10/19/youre-speaking-my-landscape-baby/"/>
    <updated>2010-10-19T16:55:39+01:00</updated>
    <id>http://www.harveynick.com/blog/2010/10/19/youre-speaking-my-landscape-baby</id>
    <content type="html"><![CDATA[<p>No, that isn&#8217;t a typo&#8230; but yes, it is a bad play on words. That&#8217;s the bad news. The good news: finally! A Clockwork Aphid implementation post!</p>

<p>If you&#8217;re building something which relates in some way to virtual worlds, then the first thing you&#8217;re going to need <em>is</em> a virtual world. This gives you two options:</p>

<ol>
<li>Use a ready made one;</li>
<li>Roll your own.</li>
</ol>


<!-- more -->


<p>Option 1 is a possibility, and one that I&#8217;m going to come back to, but for now let&#8217;s think about option 2. So then, when building a virtual world the first thing you need is the lanscape. Once again you have two options, and let me just cut this short and say that I&#8217;m taking the second one. I did used to be a bit of a CAD ninja in a previous job, but I&#8217;m not a 3D modeller and I have no desire to build the landscape by hand.</p>

<p>So I&#8217;m going to generate one procedurally. As to what that means exactly, if you don&#8217;t already know&#8230; well I&#8217;m hoping that will become obvious as I go along.</p>

<h2>Traditional Fractal Landscape Generation</h2>

<p>There are several ways of generating a landscape. A pretty good one (and one I&#8217;m quite familiar with, thanks to a certain first year computer science assignment) is the fractal method. It goes something like this:<br/>
Start off with a square grid of floating point numbers, the length of whose sides are a power of two plus one. I&#8217;m going to use a 5*5 (2*2 + 1) grid for the purposes of this explanation.</p>

<p>Set the four corners to have the value 0.5 (the centre point of the range I&#8217;ll be using), thus:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/fractallandscape1.png"></p>

<p>Now, we&#8217;re going to generate the landscape by repeatedly subdividing this and introducing fractal randomness (random fractility?) using the <a href="http://en.wikipedia.org/wiki/Diamond-square_algorithm">diamond square algorithm</a>. First the diamond step, which in this iteration will the set the value of the central cell based on the value of the four corners:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/fractallandscape2.png"></p>

<p>To do this we take the average of the four corners (which I calculate to be 0.5 in this case, because I did maths at school) and adding a small randomly generated offset, which has been scaled according to the size of the subdivision we&#8217;re making. How exactly you do this varies between implementations, but a good simple way of doing it is use a random number in the range [-0.25,0.25] at this stage and half this at each subsequent iteration. So, on this occasion let&#8217;s say I roll the dice and come up with 0.23. This now leaves us with:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/fractallandscape3.png"></p>

<p>Next, we have the square step, will set the cells in the centre of each of the sides. Once again we take the averages of other cells as starting point, this time in the following pattern:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/fractallandscape4.png"></p>

<p>Now we generate more random numbers in the same range and use them to offset the average values, giving us this:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/fractallandscape5.png"></p>

<p>That completes an iteration of the algorithm. Next we half the size of the range to [-0.125,0.125] and start again with the diamond step:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/fractallandscape6.png"></p>

<p>&#8230;and so on until you&#8217;ve filled your grid. I think you get the general idea. I&#8217;ve left out one potentially important factor here and that&#8217;s &#8220;roughness,&#8221; which is an extra control you can use to adjust the appearance of the landscape. I&#8217;m going to come back to that in a later post, because (hopefully) I have a little more that I want to say about it. I need to play with it some more first, though.</p>

<p>Once you&#8217;ve finished here you can do a couple of different things if you want to actually look at your creation. The simplest is to pick a threshold value and call this &#8220;sea level,&#8221; then draw the grid as an image with pixels set to blue below the threshold and green above it:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/image.png"></p>

<p>This was obviously generated with a slightly larger grid (513*513), but as you can see it creates quite reasonable coastlines. You can do slightly fancier things with it, such as more in depth colouring schemes and 3D display. For 3D, the simplest method is to use each cell as a vertex in your 3D space and tessellate the grid into triangles like this:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/fractallandscape7.png"></p>

<p>You can then do a couple of fancy things to remove the triangles you don&#8217;t need, either based on the amount of detail they actually add or their distance from the user (level of detail).</p>

<p>This system works quite well, but tends to produce quite regular landscapes, without of the variation we&#8217;re used to or the things generated by rivers, differing geology, coastal erosion, glaciation and other forces which affect the landscape of the real world. Additionally, because the data is stored in a height map, there are some things it&#8217;s just not capable of displaying, such as shear cliffs, overhangs, and cave systems. The grid structure is also very efficient, but quite inflexible.</p>

<h2>How I&#8217;m Doing it</h2>

<p>Needless to say that&#8217;s not exactly how <em>I&#8217;m</em> doing it. Of course there&#8217;s generally very little sense in reinventing the wheel, but sometimes it&#8217;s fun to try.</p>

<p>I&#8217;m not doing too much differently with the actual algorithm, but I am using a slightly different data representation. Rather than a grid, I&#8217;m using discrete nodes. So you start off with something like this:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/fractallandscape81.png"></p>

<p>Which then is transformed like this to generate the actual landscape:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2010/10/fractallandscape9.png"></p>

<p>What you you can&#8217;t see from the diagrams is that I&#8217;m using fractions to address the individual nodes. So, for instance, the node in the centre is (1/2,1/2) and the node on the centre right is (1/1, 1/2). This means I don&#8217;t need to worry about how many nodes I have in the landscape, and the adress of each never has to change. The next set of nodes will be addressed using fractions with 4 as the denominator, then 8, 16 and so on. Before looking up a node you first reduce its coordinates down to a lowest common denominator (which is a factor of 2) and then pull it out of the correct layer. I&#8217;m currently using maps as sparse arrays to store the data in a structure which looks like this:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Map</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">,</span> <span class="n">Map</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">,</span> <span class="n">Map</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">,</span> <span class="n">LandscapeNode</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you&#8217;re thinking that this isn&#8217;t possible in Java, you&#8217;re half right. I&#8217;m actually using one of <a href="http://trove4j.sourceforge.net/javadocs/gnu/trove/TIntObjectHashMap.html">these</a>. The first int addresses the denominator, then the east numerator, then the north numerator. I&#8217;ve looked at another couple of strategies for hashing the three ints together to locate a unique node but this one seems to work the best in terms of speed and memory usage. I might look at other options later, but nor yet.</p>

<p>This is a much more flexible representation, which removes some of the limitations of the grid. I can keep adding more detail to my heart&#8217;s content (up to a point) and I don&#8217;t have do it in a regular fashion. i.e. the native level of detail doesn&#8217;t have to be the same across the entire map. More remote areas can have less detail, for instance. By the same token, I can keep the entire &#8220;landscape&#8221; in memory, but flexibly pull individual nodes in or out depending on where the user actually is in the world, saving memory. This also potentially gives me the following:</p>

<ol>
<li>The possibility to decouple the geometry of the landscape from the topography of the representation;</li>
<li>A &#8220;native&#8221; way of implementing different levels of detail;</li>
<li>A natural tessellation strategy based on connecting a node to its parents (maybe you spotted it);</li>
<li>Enough data to allow the landscape to be modified to produce more dramatic features across different levels of detail;</li>
<li>The processes for the above should be very parallelisable.</li>
</ol>


<p>There are still a couple of things I&#8217;m working on (3D display for a start), as I&#8217;ve been obsessing over how to organise the data structures I&#8217;m using. Hopefully I&#8217;ll be back tomorrow with some 3D views.</p>

<p>If you&#8217;re interested in the code you can find it <a href="http://bitbucket.org/harveynick/clockworkaphidjava/overview">here</a>. If what you found at the end of that link didn&#8217;t make any sense to you, then you&#8217;re probably not a programmer (or you&#8217;re still learning). If you still want a look drop me a comment and I&#8217;ll see what I can do.</p>

<p>Disclaimer: As far as I&#8217;m aware I didn&#8217;t steel this from anybody, but I don&#8217;t claim it&#8217;s completely original, either.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Epic Googleyep and Other Stories]]></title>
    <link href="http://www.harveynick.com/blog/2010/10/17/epic-googleyep-and-other-stories/"/>
    <updated>2010-10-17T14:52:53+01:00</updated>
    <id>http://www.harveynick.com/blog/2010/10/17/epic-googleyep-and-other-stories</id>
    <content type="html"><![CDATA[<p>I&#8217;m currently doing some tests on a couple of different data structure implementations for Clockwork Aphid, so while they&#8217;re running I thought I&#8217;d a bit of time to write a music related post, since I haven&#8217;t done one in a while. So, contained within are three music related mini posts for your viewing pleasure.</p>

<!-- more -->


<h2>Epic Googleyep</h2>

<p>As you may or may not be aware, I spent a reasonable percentage of this year (about ten weeks) working in Australia. Some of that time was spent working offshore in <a href="http://maps.google.com.au/?ie=UTF8&amp;ll=-20.430874,116.702271&amp;spn=1.429723,1.814117&amp;z=10">this general area</a>. I spent the latter offshore time on a boat called the Unlimited (fun fact: the company which owns this boat has two others: The No Limits&#8230; and The Limitless), a 24m catamaran, whitch for much of my trip had its full crew complement of twelve. For those of you counting at home, that&#8217;s two metres each. It was&#8230; a little cramped. It did have a reasonable common area, however, with a great big flat screen TV. Outside the harbor, TV reception was less than good, and it was fairly common that the TV would be left on in an area of good reception, only to have us drift (or actively move) into a much crappier area.</p>

<p>Such was it that I wondered into the mess when a certain music video was trying to come through from the other side. At least 50% of it was static, but what I did hear I quite liked. Much of what I actually saw consisted of a slightly emo looking guy walking through a forest towards the camera, backed by two strikingly attractive and very similar looking ladies (at the time I thought it might have been the same girl twice) in evening dresses, one black and one white. I wanted to know more, but the signal gave out completely before the song finished.</p>

<p>I did not have a lot to go on, so the next time the internet was functional, I fired up Google and brazenly typed in &#8220;music video black dress white dress,&#8221; and&#8230; win! I love it when that happens. Here&#8217;s the video:</p>

<iframe src="http://www.youtube.com/embed/OOfBwSYvIic" width="" height="" frameborder="0" allowfullscreen></iframe>


<p><span class='pullquote-right' data-pullquote='Perhaps this is down to the alluring power of a well cut evening dress and a knowing smile, but&#8230; Damn'>
It&#8217;s a little bit emo, but I like it. Good tune. Unless you&#8217;re reading this in Australia you&#8217;ve probably never heard of Micheal Paynter, but likely have heard of the The Veronicas, the two ladies singing in the background. Now&#8230; Perhaps this is down to the alluring power of a well cut evening dress and a knowing smile, but&#8230; Damn. I&#8217;ve generally thought of them as &#8220;pretty&#8221; (and sometimes &#8220;annoying,&#8221; musically) but they really are stunning in this video.
</span></p>

<h2>You Are Speaking My Language!</h2>

<p>The title of my previous series of programming language related posts was, in case you hadn&#8217;t guessed, a reference to this:</p>

<iframe src="http://www.youtube.com/embed/srIKcXWN6F0" width="" height="" frameborder="0" allowfullscreen></iframe>


<p>Now, I love Juliette &amp; The Licks, but this really isn&#8217;t their best song. In actual fact I find this entire album extremely disappointing (with the exception of &#8220;I never got to tell you what I wanted to&#8221;), where as the other two albums don&#8217;t really have a bad song on them. The song title fit the posts quite well, however, so I didn&#8217;t feel I could leave it out. I spent some time on YouTube trying to work out which other song of theirs I should post as well, and ended up coming to the conclusion that this was a safe bet:</p>

<iframe src="http://www.youtube.com/embed/2WDcCT3YeM" width="" height="" frameborder="0" allowfullscreen></iframe>


<p></p>

<p>It&#8217;s a good song and I love the video. I&#8217;ve also seen plenty of girls walking through Edinburgh at 11am on a Saturday who looked like they might break into this at any moment.</p>

<p>As an additional note here: Juliette Lewis herself confuses the hell out of me. I don&#8217;t find her attractive no matter how hard I try, but I do find her extremely sexy no matter how hard I try not to.</p>

<h2>Gaga For Gaga</h2>

<p>It&#8217;s another Lady Gaga cover and I love it!</p>

<iframe src="http://www.youtube.com/embed/2ga_pr0vuHA" width="" height="" frameborder="0" allowfullscreen></iframe>


<p>This is clearly still Lady Gaga&#8217;s &#8220;Bad Romance,&#8221; but with a rock opera feel on top, which I feel works very, very well. I can imagine this version of the song sounding amazing sung by Freddie Mercury, but then I suspect that might be the case for most Lady Gaga songs (not coincidentally).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Language Post Mortem and Some Other Notes]]></title>
    <link href="http://www.harveynick.com/blog/2010/10/16/language-post-mortem-and-some-other-notes/"/>
    <updated>2010-10-16T11:53:40+01:00</updated>
    <id>http://www.harveynick.com/blog/2010/10/16/language-post-mortem-and-some-other-notes</id>
    <content type="html"><![CDATA[<p>A couple nuggets of knowledge came out of my &#8220;You&#8217;re Speaking My Language, Baby&#8221; series of posts, so I though I&#8217;d just take a quick moment to talk about them.</p>

<p>The first two are perhaps the most obvious by far. Firstly: if you actually write blog posts, people are more likely to read your blog. Funny that, huh? While my post on installing <a href="http://harveynick.com/blog/2008/08/24/mdl-celtx-on-the-acer-aspire-one/">Celtx on the Acer Aspire one</a> is still my most popular by some margin (probably because it actually provides some utility), I actually had my highest numbers of hits per day during the last week. Secondly: I get less hits over the weekend. Lax working habits for the win!</p>

<!-- more -->


<p>What&#8217;s also interesting is the relative popularity of the individual parts of the series. Most popular first, it goes like this:</p>

<ol>
<li>Introduction</li>
<li>C++</li>
<li>Conclusion</li>
<li>Java</li>
<li>Objective-C</li>
</ol>


<p><span class='pullquote-right' data-pullquote='when it comes to specifics, C++ gets the most interest'>
Now, my number of hits still isn&#8217;t exactly stellar, so this is a fairly small sample size, but it&#8217;s still quite interesting. People seem to be far more interested in reading about C++ than any of the other languages. In general, readers tend to want to know what it is I&#8217;m actually talking about, and what conclusion I come to, but when it comes to specifics, C++ gets the most interest. Is this a recommendation of the language, or the oposite, though? People could be reading what I say about it because they think it&#8217;s the sensible option&#8230; or because the folly of the language makes them seethe with rage. Hard to say. Perhaps I&#8217;ll look for some metrics of programming language popularity online.<br/>
</span></p>

<p>In one of those curious events the internet throws up, the writer of a blog I read on a regular basis also just started to work on a project of a potentially similar nature, and started off with some musings on which programming language to use. I&#8217;m talking about Shamus Young in his <a href="http://www.shamusyoung.com/twentysidedtale/?p=9644">Twenty Sided</a> blog (I should really add it to my blog roll). Interestingly, and slightly comically, he came came to an equal and oposite conclusion to my own. He didn&#8217;t consider Objective-C (not out loud, anyway), but decided that Java was the language to use if he wanted to produce something with commercial viability, but C++ was the language to use if he wanted to do some prototyping.</p>

<p>I&#8217;m still scratching my head at this in some ways. I don&#8217;t care how much experience you have in C++, you&#8217;re still likely to program faster in almost any language other than C. But in other ways it makes perfect sense. He has about a decade&#8217;s worth of experience with C++ (likewise I have about ten years worth of Java under my belt), but only limited exposure to Java. He&#8217;s looking at building a complete game, so he&#8217;s being influenced by games like <a href="http://www.minecraft.net/">Minecraft</a> (which I will be talking about more later) which were successfully developed by an individual (in Java, as I understand it). If you&#8217;re making something a bit niche and you don&#8217;t have massive amounts of resources, then having a game which can be effortlessly ported to every major operating system is a good thing. You want to expand you potential audience as much as possible. Also, if your target demographic slants towards the nerd side of the spectrum then you don&#8217;t want count out Linux, nor OSX (which gets more nerd love than you might expect). Having your game be able to run out of a browser doesn&#8217;t hurt, either.</p>

<p>I&#8217;m not (at this point) looking at building a complete game, but a piece of technology which could potentially be used by multiple games, though. Something of the order of a physics engine. Middleware is the term I seem to hear used. Thus Java (which I have more experience with) is my prototyping language, but C++ makes sense as an eventual target.</p>

<p>I&#8217;ve been holding back on what I&#8217;m actually doing, but I essentially outed myself when I said it was similar to what Shamus is. So: I&#8217;m doing something connected to procedural content generation. I&#8217;ll explain more about what that means as I go along.</p>

<p>In other news I have two weeks off work. Seems I haven&#8217;t used the vast majority of my holidays this year and taking the entire month of December off is not considered to be ideal. Thus: I have two weeks to do with as I please. I may visit my parents or even some of my friends down south. I&#8217;ll also spend quite a bit of time sitting in coffee shops with a book and a note pad. Coffee shops are good places to think, I find. Just the right amount of bussle. I&#8217;m also going to crack on with Clockwork Aphid. I&#8217;m tinkering with some implementation details at the moment, but I plan on writing about what I have so far as well. I&#8217;m also hoping to make the Heston Blumenthal chilli con carne I mentioned in a <a href="http://harveynick.com/blog/2010/08/24/its-hestontastic/">previous post</a>, but there are complications. Firstly, he&#8217;s quite specific about the types of chilli powder you should use and some only seem to be available from the good ol&#8217; USA. They&#8217;re on order, so hopefully they&#8217;ll arrive fairly soon. Secondly, there&#8217;s clearly a mistake in the recipe, unless Heston want me to boil a pan of water and prepare a bowl of ice water for purely ornamental purposes. This isn&#8217;t completely outside the bounds of reason.</p>

<p>More updates soon. Look to the skies!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[There Can be Only... Several...]]></title>
    <link href="http://www.harveynick.com/blog/2010/10/14/323/"/>
    <updated>2010-10-14T21:22:15+01:00</updated>
    <id>http://www.harveynick.com/blog/2010/10/14/323</id>
    <content type="html"><![CDATA[<p>As I&#8217;ve previously mentioned, my project (Clockwork Aphid) has been bubbling away in the bearded cauldron that is my head for quite some time. As a result, I have quite a bit I want to say about it. I want to blog about the process of building it because I think it might be a good exercise to go through, and also because I think it might help me work the whole thing out. I&#8217;m going to talk more about what it actually is quite soon, partly because I want to start talking about implementation and partly because I&#8217;ve been prompted by someone else&#8217;s project which I suspect might be quite similar. More about that later.</p>

<!-- more -->


<p>What to do when something like that happens? I think there are two reactions you can to a situation like that: you can feel threatened; or you can feel vindicated. Clearly the second is the more healthy approach, so I&#8217;ll go with that one. This is probably for the best, since there are other parties who seem to be coming at the same problem as I am. I mentioned at the end of my <a href="http://harveynick.com/blog/2010/10/08/wow-oh-wow/">post</a> about World of Warcraft that I wasn&#8217;t the only one frustrated by the static nature of its world, nor the only one attempting a solution of sorts. Specifically, I was talking about ArenaNet&#8217;s upcoming Guild Wars 2. They&#8217;ll probably explain it a little better than me, so I&#8217;ll let <a href="(http://www.guildwars2.com/en/media/videos/">them</a>):</p>

<p>Now&#8230; clearly they have more resources than I do, which could potentially make me feel a little bit like I was staring up at a shear rock face. A rock face covered in bees. Happily, though, they&#8217;re going about it in a different way, though some of our goals are the same. Guess that means I&#8217;ll just have to come up with some pretty creative solutions, huh?</p>

<p><span class='pullquote-right' data-pullquote='these are the parts with the villages you can actually save'>
It should be noted that what they&#8217;ve essentially done is polarise the world. Parts of it are shared, and these are the parts with the villages you can actually save (or fail to save), while other parts of it are instanced, which means you have your own copy. So if I kill the dragon in one of these parts, it stays dead&#8230; but only in my copy of the world. The dragon in your copy is still alive and kicking until you personally cut its head off / stab it up the bum / jam some opal fruits down its throat. They talk more about the shared, dynamic parts of the world in their blog <a href="http://www.arena.net/blog/colin-johanson-answers-your-dynamic-event-questions">here</a> and <a href="http://www.arena.net/blog/eric-flannum-answers-more-of-your-dynamic-event-questions">here</a>, and the instanced personal stories <a href="http://www.arena.net/blog/ree-soesbee-answers-your-questions-about-gw2-personal-storylines">here</a>. I encourage you to read just about all of that blog, in fact. I found much of it fascinating and quite insightful.<br/>
</span></p>

<p>While, I&#8217;m talking about Guild Wars 2, though it is worth taking a moment to marvel over just how stunning those visuals are. The comparison I find myself making is that World of Warcraft looks like it was made out of clay:</p>

<p><img class="center" src="http://www.file-extensions.org/imgs/app-picture/3744/world-of-warcraft.jpg"></p>

<p>While Guild Wars 2, on the other hand, looks as though it was made out of china:</p>

<p><img class="center" src="http://www.guildwars2.com/global/includes/images/screenshots/dynamic-events/gw2-dynamic-006.jpg"></p>

<p>Now before you cry foul and point out that GW2 is a much newer game, it&#8217;s worth taking into account that this china like quality was also true of the original Guild Wars:</p>

<p><img class="center" src="http://www.guildwars.com/images/screenshots/gwscreen047-page.jpg"></p>

<p>Obviously some of this has to do with the different graphics engines being used, but I think that actual quality of the design is definitely a factor as well. It&#8217;s evident in the 2D promotional art, as well.</p>

<p>I&#8217;m also quite taken with the difference in the mythology of the two games, but perhaps I&#8217;ll talk about that later. Mythology will be quite a relevant subject, later.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[You're Speaking my Language, Baby. Part 5: Conclusion]]></title>
    <link href="http://www.harveynick.com/blog/2010/10/13/youre-speaking-my-language-baby-part-5-conclusion/"/>
    <updated>2010-10-13T13:00:04+01:00</updated>
    <id>http://www.harveynick.com/blog/2010/10/13/youre-speaking-my-language-baby-part-5-conclusion</id>
    <content type="html"><![CDATA[<p>So&#8230; what&#8217;s the conclusion? It mostly comes back to the fact that I&#8217;m doing this mainly for fun (though you may have trouble believing it). That being the case I&#8217;m going to start working in Java. In fact I already have started working in Java, and I&#8217;ve already written the first bits of code. I&#8217;ll talk about and make them available soon.</p>

<!-- more -->


<p><span class='pullquote-right' data-pullquote='Games are among the more demanding things most people do with their computers'>
I just can&#8217;t ignore the sheer applicability of C++, though, much as I may dislike it as a language. Most game developers are going to have the majority of their legacy code written in C++ and that creates a lot of momentum.Games are among the more demanding things most people do with their computers, so they generally try to squeeze every last drop of performance out of the system they&#8217;re running on. C++ does have the potential to provide a performance advantage over Java (even if you might end up loosing that to your AI system when you starting having to use Lua to script behaviours). Another one of the reasons for this project was to create a bit of work which might act sort of like a portfolio piece. So, once the project has reached an early, but functional, stage of development I&#8217;m going to re-implement it in C++ and then see how I feel about the two different implementations before continuing. It&#8217;s not impossible that I&#8217;ll end up keeping both, but more than likely I&#8217;ll kill one and just stick with the other.<br/>
</span></p>

<p>By a process of elimination you might have realised that I&#8217;m now counting Objective-C out. This is true, but I have another side project I may end up using it on. One which lends itself quite well to being either an iPhone/iPad app or a website. Or all three. Objective-C is clearly quite applicable to the first two, and surprisingly applicable to the last, if you go the Objective-C -> MacRuby -> Ruby on Rails route.</p>

<p>That was the plan, at least, until I went ahead and did something silly. I have more than a passing interest in programming language design and so found myself reading about other programming languages. Stupidly, I found a couple which have enough merit that I really can&#8217;t count them out.</p>

<p>The first of these is <a href="http://www.digitalmars.com/d/">D</a>, which is designed to fix a lot of the problems with C++ whilst maintaining its advantages. It seems to succeed at this quite well, so far as I can tell. It also seems to have direct access to a lot of things built directly for C/C++.</p>

<p>Then we have <a href="http://www.scala-lang.org/">Scala</a> and <a href="http://fantom.org/">Fantom</a>, which use the Java virtual machine as their runtime. Both seem capable of achieving the same level of performance as Java itself, but take away some of the legacy cruft which Java has been unable to shake, whilst adding extra useful features. Scala I&#8217;m only just starting to learn about, but people seem to like it a lot. Fantom, I think, might be perilously close to being the perfect programming language by many metrics, though. Don&#8217;t take my word for it, have a read about it. I dare you not to be impressed (assuming, of course, that you are the sort of person who gets impressed with these sort of things). It adds some very cool extensions and has direct support for some very useful things, such as allowing both dynamic and static typing under the developer&#8217;s control.</p>

<p>Both Scala and Fantom can transparently use libraries written in Java, though Fantom can also deploy to both .net and javascript (for web development).</p>

<p>All three of the these languages are interesting enough for me for to not count them out entirely, so I might also try a port to one or more of them.</p>

<p>As always, comments are welcome, so please feel free to try and convince me of the error of my ways. Keep it civil, though, I know how excited programming language discussions seem to make some people.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[You're Speaking my Language, Baby. Part 4: Objective-C]]></title>
    <link href="http://www.harveynick.com/blog/2010/10/12/youre-speaking-my-language-baby-part-4-objective-c/"/>
    <updated>2010-10-12T12:00:01+01:00</updated>
    <id>http://www.harveynick.com/blog/2010/10/12/youre-speaking-my-language-baby-part-4-objective-c</id>
    <content type="html"><![CDATA[<p>The last language I&#8217;m considering is <strong>Objective-C</strong>. I know this language the least of three. To make matters worse, while Java and C++ share a similar syntax, Objective-C is completely different in places. That being said, it&#8217;s semantically very similar to Java (more so than C++) and people who know it well speak very highly of it. i.e. it does not appear to be anywhere near as broken as C++. The language itself has some dynamic capability built in, but also has all of the additional dynamic options available to C++ (more on that later) and an excellent Ruby implementation which sits directly on top of the Objective-C runtime (<a href="http://www.macruby.org/">MacRuby</a>).</p>

<!-- more -->


<p>In general, Objective-C should be faster than Java, but not as fast as C++. It doesn&#8217;t use a virtual machine, but it does have a minimal run time which is used to implement the more dynamic message passing paradigm it uses in place of standard message calls between objects. It also has optional garbage collection, allowing you to make a choice between stability and performance when you need to (i.e. you can get the code working and worry about the memory allocation later). It&#8217;s also able to leverage all of the power of both the <a href="http://llvm.org/">LLVM</a> back end and the newer <a href="http://clang.llvm.org/">Clang</a> front end, which C++ currently can&#8217;t.</p>

<p>While there aren&#8217;t a lot of directly relevant tools available for Objective-C itself, it is able to directly use any code or library written in either C or C++. No problems there, then.</p>

<p>It&#8217;s the last metric which is the kick in the teeth fot Objective-C, though. In short: no one really uses it unless they&#8217;re programming for an Apple platform. As a result, unless you&#8217;re programming specifically for either OSX or iOS you&#8217;ll loose out on a lot of frameworks. Objective-C is a first class language in the Gnu Compiler Collection (GCC), so it can be deployed easily enough under Linux (minus a lot of the good frameworks). This is not the case under windows, however, where there doesn&#8217;t seem to be any good deployment options. I have no problem ignoring Windows, but directly precluding it would appear to be somewhat foolhardy when building a piece of technology related to computer games. It wouldn&#8217;t be too much of a problem if I was only doing this as an academic exercise, but I actually have delusions of people using it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[You're Speaking my Language, Baby. Part 3: C++]]></title>
    <link href="http://www.harveynick.com/blog/2010/10/11/youre-speaking-my-language-baby-part-3-c/"/>
    <updated>2010-10-11T12:00:48+01:00</updated>
    <id>http://www.harveynick.com/blog/2010/10/11/youre-speaking-my-language-baby-part-3-c</id>
    <content type="html"><![CDATA[<p>The second language I&#8217;m considering is <strong>C++</strong>. This is the language that I use the most at my day job. It&#8217;s also the language that&#8217;s used to build the vast majority of computer games and one hell of a lot of commercial software. I&#8217;m not as familiar with it as I am with Java, but I know it well enough to be productive with it. I&#8217;m also familiar enough with it to know how horribly <a href="http://yosefk.com/c++fqa/">broken</a> it is in many respects. One of the major design goals of Java (among other more modern programming languages) was to fix the problems with C++. It also has no dynamic capabilities what-so-ever, but it&#8217;s possible to paper over this by using a minimal dynamic runtime such as <a href="http://www.lua.org/">Lua</a> for scripting.</p>

<!-- more -->


<p>All things being equal, C++ is the fastest of the three languages. It is also the one you&#8217;re most likely to write bad code in, though, so there&#8217;s a bit of a trade off here.</p>

<p>As I mentioned, most games are programmed using C++. As a result, there is a veritable shit load of graphics engine options. I would probably tend towards using the open source<a href="http://www.ogre3d.org/">Ogre3D</a> rendering engine (or something similar), but it&#8217;s worth baring in mind that I could easily switch to using, say, the Quake 3 engine (open sourced by id) if I wanted to. I could also port the project to using a commercial graphics engine if I had the desire to do such a thing.<br/>
The measure of applicability to other parties is definitely a point in favour of C++. Code written in C++ would be the easiest of the three for deployment as part of a larger project, as that project is most likely to be written in C++. In terms of acting as a developer showcase C++ has the edge as well, as it&#8217;s the language a lot of companies ask for code samples in.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[You're Speaking my Language, Baby. Part 2: Java]]></title>
    <link href="http://www.harveynick.com/blog/2010/10/10/youre-speaking-my-language-baby-part-2-java/"/>
    <updated>2010-10-10T12:00:26+01:00</updated>
    <id>http://www.harveynick.com/blog/2010/10/10/youre-speaking-my-language-baby-part-2-java</id>
    <content type="html"><![CDATA[<p>The first language I&#8217;m considering is <strong>Java</strong>. This is by far the language I&#8217;m most comfortable and proficient with. It was used for about 90% of my Bachelors degree, I wrote the entire codebase of my PhD using it, and it gets used here and there in my day job. I&#8217;m comfortable with Java, and find it to be quite a pleasant language to program in. Big tick on the question regarding my ability to use it, then. Java has some modest dynamic capabilities built in, but it also has a lot of small options for using higher level languages for the scripting, the cleanest of which is possibly Groovy.</p>

<!-- more -->


<p>Java has a bad reputation performance wise, but this largely isn&#8217;t true any more. It does run using a virtual machine, but is compiled to native code at run time. It&#8217;s a lot easier to write good code using Java than the other languages I&#8217;m considering, and that can help with performance a lot, but in general Java has the potential to be the slowest of the three, all things being equal.</p>

<p>Tools are actually not a problem. There are a lot of high quality graphics engines available for Java, with the <a href="http://www.jmonkeyengine.com/">Java Monkey Engine</a> (JME) being my favourite. A physics add-on is available in the form of <a href="http://code.google.com/p/jmephysics/">JMEPhysics</a>, with the next version slated to have a physics engine baked in. Raw OpenGL is also an option with <a href="http://lwjgl.org/">LWJGL</a>, should I want it. Likewise, I suspect that the <a href="http://www.reddwarfserver.org/">Red Dwarf Server</a> is likely meet my communication needs.</p>

<p>The applicability of Java to other interested parties is an interesting question. A lot of software gets written in Java. A LOT. But the vast majority of it is not games. Largely, I think this is because it&#8217;s perceived to be lacking in the performance department. It&#8217;s also a little harder to protect you code when you&#8217;re writing in Java, too. The previously mentioned JME has the support of a commercial games company, though, so clearly there is interest. Computers are getting faster at quite a rate, so performance has the potential to be less of a concern, especially if the project you&#8217;re working on has the whiff of a server side application about it. When it comes to server side code, I think Java is definitely winning the race. Frankly, I have a bit of trouble calling this one either way.</p>

<p>One language down, two to go. Look for the next post tomorrow, should you be interested in such things.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[You're Speaking my Language, Baby. Part 1: Introduction]]></title>
    <link href="http://www.harveynick.com/blog/2010/10/09/youre-speaking-my-language-baby-part-1-introduction/"/>
    <updated>2010-10-09T12:00:33+01:00</updated>
    <id>http://www.harveynick.com/blog/2010/10/09/youre-speaking-my-language-baby-part-1-introduction</id>
    <content type="html"><![CDATA[<p>If you&#8217;re about to start on a programming project of some sort (and I am), then the first choice you have to make is the main programming language you&#8217;re going to use. Now, if you&#8217;re carrying out this project on your employers time they probably have very specific views about that. I&#8217;m not doing this project on company time, though, so the world is my oyster, figuratively speaking. There are, at a rough guess, shit loads of programming languages out there. There&#8217;s a reasonably good list to be found <a href="http://en.wikipedia.org/wiki/Comparison_of_programming_languages">here</a>, though it is missing a couple of the weird ones. While constructing the project using a <a href="http://en.wikipedia.org/wiki/LOLCODE">language</a> which uses LOL cat type speech for syntax, or takes its input in the form of <a href="http://en.wikipedia.org/wiki/Piet_(programming_language)">abstract art</a> would be an excellent mental challenge, I&#8217;m sure, that&#8217;s just not what I&#8217;m looking for.</p>

<!-- more -->


<p>I&#8217;m also, right off the bat, going to eliminate a couple of other classes of language. First of all: no functional programming languages. I have no patience for learning a new programming paradigm, expecially one which up until now has shown limited application outside academia. No Haskell, no CAML and absolutely no Prolog.</p>

<p>I&#8217;m also not considering high level dynamically typed languages, so no Python and no Ruby. For that matter, no Groovy or Lua either. You can program very quickly in them, but I&#8217;m not prepared to take the performance hit which comes with them. Python might be very popular, but I think it actively encourages bad programming practice and I want no part of that. It&#8217;s an excellent hobbyest language, but that isn&#8217;t what I&#8217;m looking for.</p>

<p>Lastly: I&#8217;m not looking at anything based on Microsoft&#8217;s .Net platform, and that includes Mono.</p>

<p>The questions I&#8217;m going to be asking of the languages I am considering are the following:</p>

<ul>
<li>How well  can I use it?</li>
<li>Generally, speaking, how good is the performance?</li>
<li>What tools are available? Specifically, does it have access to the libraries I&#8217;ll need to build the project. These are mostly ones relating to 3D graphics, inter-computer (client-server) communication and (possibly) physics. There are probably a couple of other things I haven&#8217;t thought of yet.</li>
<li>How relevant is it to others? That is, if I write the project in this language will it be useful to other interested parties?</li>
</ul>


<p>I considered three languages and I&#8217;ll tackle them one at a time in future posts.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WoW oh WoW]]></title>
    <link href="http://www.harveynick.com/blog/2010/10/08/wow-oh-wow/"/>
    <updated>2010-10-08T12:40:51+01:00</updated>
    <id>http://www.harveynick.com/blog/2010/10/08/wow-oh-wow</id>
    <content type="html"><![CDATA[<p>Sooner or later, most people go looking for a bit of escapism every once in a while. There&#8217;s definitely a spectrum of how far people like to escape. Some can&#8217;t stand anything which steps outside the bounds of the possible, others practically require spaceships and dragons to co-exist with emotionally retarded vampires. Likewise, some people look to books for their diversions, some theatre, radio, television or cinema. Some people play computer games or one sort of another. No one is saying that everyone, or indeed anyone, has make a specific and binding choice, though. You can watch a movie about the emotional and theological struggle of gay monks one evening, read a couple of chapters of a book about an adolescent wizard immediately before bed, and take on the role of a greek god laying waste to&#8230; well&#8230; everything the next day.</p>

<!-- more -->


<p>The point of my new project (Clockwork Aphid), when you get right down to it, has to do with my own frustrations with a certain kind of computer game. Specifically: the ones I&#8217;m going to lump together under the moniker &#8220;virtual worlds&#8221;. There are a lot of them out there, and I can&#8217;t claim to have tried them all, but I have had a play with a couple of the major ones and that&#8217;s what I want to talk about today.</p>

<p><span class='pullquote-right' data-pullquote='the sprawling 500 lb gorilla that actually accounts for almost 10% of the revenues of the US gaming industry'>
Where to start, though? I&#8217;ve gone backwards and forwards about this quite a bit and come to the conclusion that I should probably start at the top. The top in this case being the brute, the sprawling 500 lb gorilla that actually accounts for almost 10% of the revenues of the US gaming industry: World of Warcraft, or WoW, to give it its not exactly modest acronym. What we&#8217;re talking about here is not just a virtual world, but a massively multi-player online role playing game, or MMORPG. Let&#8217;s examine the meaning of this working backwards through the words:<br/>
</span></p>

<ul>
<li>Game - this is something you play, for fun.</li>
<li>Role playing - it contains some component of playing a role different to that of your everyday life. All games do this to a greater or lesser extent, but the difference here is that your <em>character&#8217;s</em> own personality and skills have more relevance to the gameplay than your own.</li>
<li>Online - the game is played over the Internet.</li>
<li>Multi-player - the game is played simultaneously by multiple people.</li>
<li>Massively - the &#8220;multiple people&#8221; playing the game can number in the thousands.</li>
</ul>


<p>WoW is set in an essentially Tolkenesque fantasy world populated by humans, dwarfs and elves, acting more or less as you&#8217;d expect them to had you read or seen the Lord of the Rings. There are other races: Orcs, trolls, undead, gnomes, undead, who are a little more stylised. There&#8217;s quite a bit of steam punk and tribal culture in places. That&#8217;s not the point though. The point, as in any game, is the question &#8220;what does the user do?&#8221; and the answer in this case is:</p>

<p>The user takes on the role of one of a member of one of these races, with a particular profession and proceeds to battle their way through the world, fighting hostile elements and performing quests in order to gain &#8220;experience&#8221; and improve their character. They can also join forces with other players to take on quests; in fact this is practically required in some cases.</p>

<p><span class='pullquote-right' data-pullquote='A lot of the time you just find yourself killing monster, after monster, after monster'>
I&#8217;ve spent a bit of time playing WoW and frankly it can be a lot of fun. The world is HUGE and exploring it can be very enjoyable. There&#8217;s also a genuine sense of achievement to be gained from &#8220;levelling up&#8221; your character. Most of the time. Which brings me to the first frustration: the grind. A lot of the time you just find yourself killing monster, after monster, after monster. This is partly because a large number of the quests (which are handed out by non-player characters, or NPCs, with large yellow exclamation points above their heads) sound like this:<br/>
</span></p>

<blockquote><p>&#8220;Oh no! &lt;insert description of peril>! Please help us! Kill &lt;insert number> of &lt;insert name of monster responsible for this peril>&#8221;</p></blockquote>

<p>Or even worse and with a more concrete example:</p>

<blockquote><p>&#8220;Please bring me 10 giant spider legs.&#8221;</p></blockquote>

<p>The problem here being that against all conventional logic, you might only get a giant spider leg for every third giant spider you kill. As you may have gathered, they don&#8217;t call it the grind because it&#8217;s fun.</p>

<p><span class='pullquote-right' data-pullquote='You do the townsfolk a good turn by depleting the number of bandits besieging the town, but this changes nothing'>
The next frustration is that you don&#8217;t actually affect the world. You do the townsfolk a good turn by depleting the number of bandits besieging the town, but this changes nothing. Other players come along and do the exact same quest time after time after, because the bandits simply reappear a couple of minutes after you take them down. So, when you do the quest to take out the leader of the bandits, you arrive to find that a queue has formed. The first person kills him, the others wait for him to reappear and do the same. It sort of breaks the illusion of the game. More annoying still: you&#8217;ve been waiting patiently for your turn, but some git comes running in and kills him first. Most annoyingly, to my mind is&#8230; Well&#8230; Let me give you an anecdotal example:<br/>
</span></p>

<p>I was playing as a rogue, which is a nice way of saying thief/assassin, and had been given a quest to recover a particular object from a beach. Needless to say, the beach turned out to be crawling with monsters. So I set about luring them away one by one, depleting their numbers so I could get my trophy without getting my ass handed to me (rogues can give it out, but they cannot take it). The problem being, that by the time I get the to point where I can start thinking about claiming the prize, the monsters I killed first have already started to resappear!</p>

<p>Here&#8217;s the problem: this is not how the game wanted me to go about this task. It wanted me to find a group of other players and storm the beachhead, quickly despatching the monsters and grabbing the prize. I was playing as a damn rouge, though! That is not how an assassin does business! In the end I got lucky. A warrior stormed the beach as I was creeping up, and I snaffled the loot while the monsters were distracted. Amoral? I believe I did point out that I was playing as a rogue.</p>

<p><span class='pullquote-right' data-pullquote='it can make you feel as though you and your actions don&#8217;t really matter'>
In a regular, non MMO, RPG, everything you kill stays dead for the most part. In this case the world doesn&#8217;t have to be persistent (as in unchanging) because you&#8217;re the only one playing it and it doesn&#8217;t matter if no one else can do the quests. In an MMO, almost <em>everyone</em> needs to be able to do the quests, so the world generally performs a decent impression of Kirsten Dunst&#8217;s hair in Interview with a Vampire. It is a workable solution to the problem, but it can make you feel as though you and your actions don&#8217;t really matter, which isn&#8217;t ideal given that you&#8217;re supposed to be a hero.<br/>
</span></p>

<p>I&#8217;m not the first person to have these sort of complaints, or to contemplate solutions, but that&#8217;s a story for another day.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What in the Name of all that's Holy is a Clockwork Aphid?]]></title>
    <link href="http://www.harveynick.com/blog/2010/10/07/what-in-the-name-of-all-thats-holy-is-a-clockwork-aphid/"/>
    <updated>2010-10-07T16:24:15+01:00</updated>
    <id>http://www.harveynick.com/blog/2010/10/07/what-in-the-name-of-all-thats-holy-is-a-clockwork-aphid</id>
    <content type="html"><![CDATA[<p>Clockwork Aphid is the name I&#8217;m giving to a side project I&#8217;ve had sitting at the back of head for a little while. I&#8217;m actually going to try and build it now. What it actually is is quite big and hard to explain, so I&#8217;m going to do it gradually, over time. This way I also get to maintain a little bit of mystery. Here&#8217;s what I will say up front, though:</p>

<!-- more -->


<ul>
<li>It&#8217;s a programming project;</li>
<li>It&#8217;s connected to computer games;</li>
<li>It&#8217;s also connected to&#8230; another form of digital entertainment which is (arguably) related to computer games;</li>
<li>In the beginning at least, I&#8217;m going to make the code I write open source.</li>
</ul>


<p>The actual name &#8220;Clockwork Aphid&#8221; comes from the name of the group I helped field to the &#8220;Dare to be Digital&#8221; computer game creation competition several years ago. We didn&#8217;t get in, but we proposed a game called &#8220;Bad Penny&#8221; which I still think was a bloody good idea. Some of the elements of that project are contained in this one also, but the name Bad Penny was chosen for a good reason. It was very appropriate for the type of game we were proposing. This project is potentially bigger, though, and I don&#8217;t want to limit the scope.</p>

<p>As for the Clockwork Aphid name itself? I just plain thought it sounded good then and I still think it sounds good now.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[It's Hestontastic!]]></title>
    <link href="http://www.harveynick.com/blog/2010/08/24/its-hestontastic/"/>
    <updated>2010-08-24T22:08:27+01:00</updated>
    <id>http://www.harveynick.com/blog/2010/08/24/its-hestontastic</id>
    <content type="html"><![CDATA[<p>Strangely, I don&#8217;t think my good lady actually thought I&#8217;d attempt to make any of the actual recipes when she bought me a copy of <a href="http://en.wikipedia.org/wiki/Heston_Blumenthal">Heston Blumenthal</a>&#8217;s &#8221;<a href="http://www.amazon.co.uk/Further-Adventures-Search-Perfection-Blumenthal/dp/0747594058/ref=pd_bxgy_b_img_b">Further Adventures in Search of Perfection</a>&#8221; for Christmas last year. Sometimes I worry about how little she appears to know me. A chili con carne recipe which takes three days to prepare is exactly the sort of challenge I&#8217;m practically incapable of resisting. A black forest gateau that requires the use of a hoover? I say &#8220;bring it on!&#8221;</p>

<p>I do intend to have a crack at those ones, but I thought I&#8217;d ease my way in with the Bolognese recipe from &#8221;<a href="http://www.amazon.co.uk/Search-Perfection-Heston-Blumenthal/dp/0747584095">In Search of Perfection</a>,&#8221; which takes a mere ten hours to prepare and requires no special tools.</p>

<!-- more -->


<p>We invited round two friends whom we have cause to thank and don&#8217;t see nearly enough of, and I gave it my best shot. Here&#8217;s the maestro himself, explaining how it&#8217;s done:</p>

<iframe src="http://www.youtube.com/embed/6pR5kVyemdY" width="" height="" frameborder="0" allowfullscreen></iframe>




<iframe src="http://www.youtube.com/embed/Mj9K6iSmafc" width="" height="" frameborder="0" allowfullscreen></iframe>




<iframe src="http://www.youtube.com/embed/UMx4HUKaA9k" width="" height="" frameborder="0" allowfullscreen></iframe>


<p>In the interests of honesty, here are the things I did differently:</p>

<ul>
<li>My good lady is allergic to celery, so I took it out;</li>
<li>Every butcher I tried practically laughed in my face when I asked for minced ox tail, so I used good steak mince;</li>
<li>I don&#8217;t hold with serving a meat sauce with spaghetti, so I used pappardelle (thick ribbons);</li>
<li>I also served it with some particularly good garlic bread of my own devising.</li>
</ul>


<p>I should also point that the video is missing a couple of minor steps. If you want to actually make it, I recommend buying the book. If you have no desire to make it whatsoever, I recommend buying the book. Both books. They are fascinating reads. If you can&#8217;t read, I recommend buying the book. It also has good pictures. I&#8217;m a little confused if that&#8217;s the case, though.</p>

<p>At this point you&#8217;re probably wondering if the sauce is good enough to warrant the expenditure of an entire day to make it? In short: yes. Abso-fucking-lutely. It was amazing. Will I make it again? Probably, though certainly not often. I might make it sometime when my good lady isn&#8217;t in town and I can include the celery without the risk of her death (the sauce is not quite that good). Perhaps I&#8217;ll even try begging and pleading with one of the local butchers to get some minced ox tail or a better substitute.</p>

<p>What I will definitely do is use some of the individual techniques. The tomato base may well become a sauce for meatballs, and the caramelized onions will almost certainly get used in a gravy or two.</p>

<p>Across the entire of both books are sixteen recipes. One down.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Musical Arithmetic]]></title>
    <link href="http://www.harveynick.com/blog/2010/08/15/musical-arithmetic/"/>
    <updated>2010-08-15T12:40:46+01:00</updated>
    <id>http://www.harveynick.com/blog/2010/08/15/musical-arithmetic</id>
    <content type="html"><![CDATA[<p>Okay, so here&#8217;s the formula:</p>

<pre><code>(A - B) + C = D
</code></pre>

<p>And here are the variables:</p>

<!-- more -->


<p>A = <iframe src="http://www.youtube.com/embed/UZjf9C6atT4" width="" height="" frameborder="0" allowfullscreen></iframe></p>

<p>Evanescence. More specifically: the original line up (as far as most of the world is concerned). I like Evanescence quite a bit, but that&#8217;s about 74.2% Amy Lee&#8217;s voice. The girl has one hell of a pair of lungs on her. I picked this particular song from the first album for reason which may become obvious later. For what it&#8217;s worth, I think Everybody&#8217;s Fool and Imaginary are a much better songs.</p>

<p>B = <iframe src="http://www.youtube.com/embed/bP5wmtOXCQ" width="" height="" frameborder="0" allowfullscreen></iframe></p>

<p>Evanescence again? No. Well&#8230; yes, but the current line up. Specifically: Amy Lee herself. I picked this song from the second album (which is much better than the first) because it seems to have the most Amy Lee-ness in it. It doesn&#8217;t have an actual video, though, so alternatively:</p>

<p>B = <iframe src="http://www.youtube.com/embed/Hqd2FJF8-h8" width="" height="" frameborder="0" allowfullscreen></iframe></p>

<p>I figure having a deficit of Seether won&#8217;t affect the sum either way, so this works too.</p>

<p>C = <iframe src="http://www.youtube.com/embed/dUyMvaJwACc" width="" height="" frameborder="0" allowfullscreen></iframe></p>

<p>Former Irish American Idol contestant* Carly Smithson. Once again: A hell of a pair of lungs. Not an entirely dissimilar look, but quite a different vocal style, it would appear. Carly&#8217;s voice has a bit more blues in it, a bit more sultriness.</p>

<p>D = <iframe src="http://www.youtube.com/embed/zzTZeeMCUBk" width="" height="" frameborder="0" allowfullscreen></iframe></p>

<p><a href="http://www.wearethefallen.com/">We are the Fallen</a>, the new band from Ben Moody, two other former members of Evanescence and Carly Smithson. Can you seen why I picked that particular Evanescence song? That&#8217;s more than a passing resemblance, style wise. There is a second reason I picked it, <a href="http://www.youtube.com/watch?v=kdYa0oeMLfI&amp;feature=related">however</a>. Carly has a less operatic voice, though, and a bit more range in terms of singing style. I love me some female fronted metal, so I&#8217;ll be keeping an eye on this band.</p>

<p>Okay, here&#8217;s another one which plays a bit better to her frankly spectacular voice:</p>

<p>D = <iframe src="http://www.youtube.com/embed/u24NXTBHLYU" width="" height="" frameborder="0" allowfullscreen></iframe></p>

<p>* That is: she&#8217;s Irish and was a contestant on &#8220;American Idol.&#8221; There is no such show as &#8220;Irish American Idol,&#8221; so far as I&#8217;m aware.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Location Location Location]]></title>
    <link href="http://www.harveynick.com/blog/2010/08/05/location-location-location/"/>
    <updated>2010-08-05T19:47:54+01:00</updated>
    <id>http://www.harveynick.com/blog/2010/08/05/location-location-location</id>
    <content type="html"><![CDATA[<p>One of the few things I&#8217;ve missed since abandoning the good ship Windows PC for the Mac&#8230; er&#8230; Zeppelin (why not?) is magazines. I used to really enjoy reading the PC gaming and hardware mags. Oftentimes they were pitched at about the right level for me. I felt neither patronised nor confused. I&#8217;m afraid to say that this is not the case with Mac magazines. For the most part they tend to aim a little low, tech wise (no kidding, right?). I did also try Linux magazines, but generally found them to be way too dry and not especially well written. Once again, quelle surprise. Quelle surprise beaucoup.</p>

<!-- more -->


<p>So I was, as I&#8217;m sure you can imagine, quite overjoyed to discover <a href="http://www.wired.co.uk/">Wired</a> magazine. A platform agnostic tech magazine pitched about the right level (ish) for me, tech wise, whilst also having some focus on the business side of technology? Win! If you&#8217;re not reading it already, I highly recommend it. So, when Wired decided to give the cover story to location based social networks, concentrating on <a href="http://foursquare.com/">Foursquare</a> and <a href="http://gowalla.com/">Gowalla</a>, I though &#8220;sure, what the hell?&#8221; and gave them both a go.</p>

<p>That was a good couple of weeks ago now, and I can categorically say that I&#8217;m not sure if I like them or not. Nor am I sure which of the two I prefer. The idea, basically, is that you periodically tell them where you are.</p>

<p>Where are you going? Wait, there&#8217;s more.</p>

<p>It&#8217;s a game of sorts, you see. Foursquare awards you points for visiting places (more if they&#8217;re new places) while Gowalla gives you badges in your&#8221;passport.&#8221; Both of them also award you bonuses for various things, and Foursquare declares you the &#8220;Mayor&#8221; of locations if you visit them more than anybody else. There is a bit more to it than this, of course, there&#8217;s a social aspect, connected to both locating your friends and finding out where is currently &#8220;happening,&#8221; (this is the correct term, yes?) but I think I&#8217;ve given you the gist.</p>

<p>On balance: foursquare seems to do more in terms of the whole &#8220;life as a game&#8221; idea, and makes it feel more worthwhile to visit places multiple times&#8230; but Gowalla has a MUCH better design, and the badges and pins (achievements) it gives you are much prettier, but lacks the competitiveness of Foursquare. I think, at this point, I would tentatively recommend both, but particularly Foursquare if you&#8217;re a competitive sort. Either way, feel free to friend me if you do give them a try (it&#8217;s free).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A couple more...]]></title>
    <link href="http://www.harveynick.com/blog/2010/07/27/a-couple-more/"/>
    <updated>2010-07-27T22:02:30+01:00</updated>
    <id>http://www.harveynick.com/blog/2010/07/27/a-couple-more</id>
    <content type="html"><![CDATA[<p>Further to my last post, here&#8217;s a couple more films which caught my eye, though one of them is a ways off yet.</p>

<p>Faster (<a href="http://trailers.apple.com/trailers/independent/faster/">trailer</a>) - I will go and see Dwayne Johnson in any film which doesn&#8217;t involve him wearing a tutu or fairy wings. Perhaps even then, and you can quote me on that. The guy has more charisma and physical presence than just about everyone else out there, and is (as far as I&#8217;m concerned) always good value for money, regardless of the quality of the actual film. Frankly, the guy should be a much bigger start than he is. That he&#8217;s in an indie revenge flick makes me very happy indeed. Also: great trailer.</p>

<!-- more -->


<p></p>

<p>Sucker Punch (<a href="http://trailers.apple.com/trailers/wb/suckerpunch/">trailer</a>) - Zack Snyder is another one of those directors who&#8217;s work I would go sight unseen. Though Watchmen wasn&#8217;t quite the film I wanted it to be, I still enjoyed the hell out of it and I loved his two previous films (300 and Dawn of the Dead). This is a director who makes <em>cinema</em> and every frame of it is absolutely, stunningly beautiful. Evidence so far suggests that he actually works pretty well with actors and knows how to handle a plot, also, which is nice (Micheal Bay, take note). This is his first time working with an original property, so I guess we&#8217;ll have to see how it goes. Oh yeah, it also seems to have nazis, dragons, sword wielding burlesque girls, Zeppelins, spaceships and mini gun toting giant samurai demons&#8230; and something tells me that&#8217;s not the half of it&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Looking Forwards]]></title>
    <link href="http://www.harveynick.com/blog/2010/07/18/looking-forwards/"/>
    <updated>2010-07-18T17:02:30+01:00</updated>
    <id>http://www.harveynick.com/blog/2010/07/18/looking-forwards</id>
    <content type="html"><![CDATA[<p>The Cineworld unlimited card is a wonderful thing, especially given that I no longer have a student card (I am still a student, technically. Don&#8217;t ask). It encourages you to take a much more &#8220;what the hell,&#8221; type attitude to heading to the cinema, and I love me some cinema. That being the case, I thought I&#8217;d write a (probably) quick post covering the films coming out this year that I&#8217;m pretty certain I&#8217;ll be going to see.</p>

<!-- more -->


<p>So, in particular order (aside from the one in which they occurred to me):</p>

<p>Inception (<a href="http://trailers.apple.com/trailers/wb/inception/">trailer</a>) - There are some director&#8217;s who pretty much guarente I&#8217;ll go see a film. Christopher Nolan is one of them. Likewise, there are some actor&#8217;s who pretty much guarente I&#8217;ll go and see a film. Ellen Page is one of them. Also: this film look awesome.</p>

<p>The Social Network (<a href="http://movies.yahoo.com/premieres/20889647/standardformat">trailer</a>) - David Fincher is another one of the directors who almost guarantees I&#8217;ll go see a film. Aaron Sorkin is a writer who pretty much guarantees I&#8217;ll go see a film. I didn&#8217;t think I was interested in a film about Facebook, but it turns out that I really, really am. Watch the trailer.</p>

<p>Machete (<a href="http://trailers.apple.com/trailers/fox/machete/">trailer</a>) - I didn&#8217;t think much of Death Proof, but I loved me some Planet Terror, and this looks like it&#8217;s coming from the same headspace.</p>

<p>Tron Legacy (<a href="http://trailers.apple.com/trailers/disney/tronlegacy/">trailer</a>) - I think I might have already mentioned this one.</p>

<p>The Town (<a href="http://trailers.apple.com/trailers/wb/thetown/">trailer</a>) - Ben Affleck might be a genius. Perhaps you didn&#8217;t know that. You might assume that it was Matt Daemon who did most of the heavy lifting when it came to writing Good Will Hunting. But did you go see Gone Baby Gone? Because he wrote (well, adapted) and directed that and it was <em>spectacular</em>. I&#8217;m hoping he&#8217;s done it again.</p>

<p>The Expendables (<a href="http://trailers.apple.com/trailers/lions_gate/theexpendables/">trailer</a>) - A cast made up almost entirely of action legends? Written and directed by the man who brought us Rambo? I&#8217;m there. If you didn&#8217;t watch Rambo (the most recent one), perhaps you should. It is incredibly, unflinchingly violent. But it&#8217;s a film about violence and you might be surprised by how much it has to say.</p>

<p>Scott Pilgrim vs. The World (<a href="http://trailers.apple.com/trailers/universal/scottpilgrimvstheworld/">trailer</a>) - I love it. I love the style. I love the sense of humour. I love the ideas. I&#8217;ll be very surprised I don&#8217;t giggle with glee all the way through this one.<br/>
R.E.D. (<a href="http://trailers.apple.com/trailers/summit/red/">trailer</a>) - I&#8217;m not even going to try explaining this one. Just watch the trailer.</p>

<p>Knight and Day (<a href="http://trailers.apple.com/trailers/fox/knightandday/">trailer</a>) - I don&#8217;t know about you, but I mostly go to the cinema to be entertained. This looks like it will be super entertaining. Side note: I might not like Tom Cruise on a person, but I don&#8217;t think I&#8217;ve ever disliked him in a film.</p>

<p>The Green Hornet (<a href="http://trailers.apple.com/trailers/sony_pictures/thegreenhornet/">trailer</a>) - This looks all kinds of silly. These ingredients (superhero + martial arts + star of Knocked Up + director of Eternal Sunshine of the Spotless Mind) should not go together. But I bet the first person to eat a peanut butter and jam sandwich said the same thing.</p>

<p>Harry Potter and the Deathly Hollows (<a href="http://trailers.apple.com/trailers/wb/harrypotterandthedeathlyhallows/">trailer</a>) - I expect to be disappointed by this one. I have been by every other one of these films. But that doesn&#8217;t mean I didn&#8217;t enjoy them (except the second one). I&#8217;m looking forward to the conclusion of the first set of adaptations of these books.</p>

<p>There are more, but that&#8217;ll do for now. What do you guys think? Any of these look good? Any look great? Any look awful? Anything you&#8217;re particularly looking forward to?</p>

<p>As a slight aside, I&#8217;m also HarveyNick on Tumblr and Twitter, and I&#8217;m thinking of moving the 15 words or less film review to Tumblr instead of here, as it seems to fit better. Can anyone think of a reason I shouldn&#8217;t (it&#8217;ll still get cross posted to Facebook).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Identity]]></title>
    <link href="http://www.harveynick.com/blog/2010/06/19/identity/"/>
    <updated>2010-06-19T15:01:16+01:00</updated>
    <id>http://www.harveynick.com/blog/2010/06/19/identity</id>
    <content type="html"><![CDATA[<p>As you may or may not know, I&#8217;m currently in Australia. In fact, I&#8217;ve now been here for a little over a month. I&#8217;ll blog about it sooner or later, but not yet. This is largely because I don&#8217;t know what I&#8217;m going to say. This trip has been an alarming combination of coolness and frustration so far, and I don&#8217;t want to let too much of the later slip out. That would be highly unprofessional of me, and possibly not great either for my employer or my career.</p>

<p>This post shall be about something else.</p>

<!-- more -->


<p>I have a side project that I&#8217;ve chomping at the bit to get started on, and while I&#8217;ve been here I&#8217;ve worked up a couple of fairly good ideas for it. I can&#8217;t start work on it, though, because I only have my work computer with me, and a studiously avoid doing any side projects or personal work on it, just to be on the safe side, intellectual property wise. Aside from reading up on things and doing some scribblings on paper, the other thing I can do is set up a bit of infrastructure.</p>

<p>I&#8217;m going to make the project public, both in terms of open sourcing the code and blogging about the ideas behind it (at least to begin with). But where, though? Here&#8217;s my dilema: I&#8217;m HarveyNick on wordpress, Tumblr, Twitter* and now BitBucket (the place I&#8217;ll be hosting the code - side note: I&#8217;ll be going with Mercurial for revision control). Should I write the blog entries here (and have them trickle down to tumblr and twitter), and host the code directly under HarveyNick&#8217;s account on BitBucket? Let&#8217;s say I name the project after my old band, the repository would be</p>

<pre><code>bitbucket.org/harveynick/hinge  
</code></pre>

<p>Which stamps my ownership on it quite heavily. Likewise, if I put blog entries here: same situation. In some senses that&#8217;s a good thing. Right now, it&#8217;s my project. I might not always want it to be that way, though. Getting other people involved might also be good. I tend to work better (a lot better) when I have someone to bounce ideas off. So let&#8217;s consider option 2; I put the project under another umbrella, and give myself (ie the harveynick identity) access to it. Let&#8217;s say I go with one of the names my old band was thinking of switching to after some assholes in Chicago threatened to sue us. That would put it here:</p>

<pre><code>bitbucket.org/deadcitywalking/hinge  
</code></pre>

<p>I could then start a deadcitywalking.wordpress.com blog to talk about it, and perhaps link the entries here. Should other people start playing in this particular sandpit, then they could perhaps add their own entries to this blog.</p>

<p>You&#8217;re probably not interested in this. I&#8217;m mostly just thinking out loud. But if you have any thoughts, I&#8217;d love to hear them.</p>

<p>* Why do I have all three of these? I&#8217;m not entirely sure yet, other than because they&#8217;re there.</p>
]]></content>
  </entry>
  
</feed>
