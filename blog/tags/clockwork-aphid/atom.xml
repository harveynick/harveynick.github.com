<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Clockwork Aphid | HarveyNick.com]]></title>
  <link href="http://www.harveynick.com/blog/tags/clockwork-aphid/atom.xml" rel="self"/>
  <link href="http://www.harveynick.com/"/>
  <updated>2013-05-19T21:28:10+01:00</updated>
  <id>http://www.harveynick.com/</id>
  <author>
    <name><![CDATA[Nick Johnson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Simplifying the Landscape]]></title>
    <link href="http://www.harveynick.com/blog/2011/12/01/simplifying-the-landscape/"/>
    <updated>2011-12-01T09:28:05+00:00</updated>
    <id>http://www.harveynick.com/blog/2011/12/01/simplifying-the-landscape</id>
    <content type="html"><![CDATA[<p>At the end of the <a href="/blog/2010/10/22/now-in-eye-popping-3d/">last post</a> I wrote about the actual implementation of my Clockwork Aphid project, I said the next step was going to be display simplification. At that point I'd generated a few landscapes which were just starting barely starting to test the limits of my computer, though they were nothing like the size or complexity I had in mind. That said, it was looking at landscapes containing 1579008 polygons and it was obvious that not all of these needed to be put on screen. Moreover, because my landscapes are essentially made up of discrete samples (or nodes): I needed to reduce the number of samples which were displayed to the user, otherwise my performance was really going to tank as the landscapes increased in size.</p>

<!-- more -->


<p>Shamus Young talked about terrain simplification <a href="http://www.shamusyoung.com/twentysidedtale/?p=142">some time ago</a> during his original terrain project. This seemed as good a place as any to start, so I grabbed a copy of <a href="http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.14.4771">the paper</a> he used to build his algorithm. I didn't find it as complicated as it appears he did, but this is probably because I'm more used to reading papers like this (I must have read hundreds during my PhD, and even wrote a couple), so I'm reasonably fluent in academicese. It was, as I suspected, a good starting point, though I wouldn't be able to use the algorithm wholesale as it's not directly compatible with the representation I'm using. Happily, my representation does make it very simple to use the core idea, though.</p>

<p>If you <a href="/blog/2010/10/19/youre-speaking-my-landscape-baby/">remember</a>, my representation stores the individual points in a sparse array, indexed using fractional coordinates. This makes it very flexible, and allows me to use an irregular level of detail (more on that later). Unlike the representation used in the paper, this means a can't make optimisations based on the assumption that my data is stored in a regular grid. Thankfully, the first stage of the simplification algorithm doesn't care about this and examines points individually. Also thankfully, the simplification algorithm uses the same parent/child based tessellation strategy that I do.</p>

<p>The first step is decide which points are "active". This is essentially based on two variables:</p>

<ul>
<li>The amount of "object space error" a point has (i.e. how much it differs from its parents);</li>
<li>The distance between the point and the "camera".</li>
</ul>


<p>A local constant is also present for each point:</p>

<ul>
<li>The point's bounding radius, or the distance to its furthest child (if it has children);</li>
</ul>


<p>I'm not sure if I actually need this last in my current implementation (my gut says no, I'll explain why later), but I'm leaving it in for the time being. Finally, two global constants are used for tuning, and we end up with this:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2011/12/simplificationequation21.png"></p>

<p>Where:</p>

<ul>
<li><em>i</em> = the point in question</li>
<li><em>λ</em> = a constant</li>
<li><em>ε<sub>i</sub></em> = the object space error of <em>i</em></li>
<li><em>d<sub>i</sub></em> = the distance between <em>i</em> and the camera</li>
<li><em>r<sub>i</sub></em> = the bounding radius of <em>i</em></li>
<li><em>τ</em> = another constant</li>
</ul>


<p>This is not entirely optimal for processing, but a little bit of maths wizardry transforms this like so:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2011/12/simplificationequation31.png"></p>

<p>This looks more complicated, and it's less intuitive to see what it actually does, but from the point of view of the computer it's a lot simpler, as it avoids the square root needed to calculate the distance between the point and the camera. Now we get to the fun part: diagrams! Consider the following small landscape, coloured as to the granularity of each of the points (aka the distance to the node's parents, see <a href="/blog/2010/10/22/fractal-errata/">this post</a>):</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2011/12/allpoints.jpg"></p>

<p>Next, we'll pick some arbitrary values for the constants mentioned above (ones which work well for explanatory purposes), and place the viewpoint in the top left hand corner, and we end up with this the following active points (inactive points are hidden):</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2011/12/activepoints.jpg"></p>

<p>Now, we take the active points with the smallest granularity, and we have them draw their polygons, <a href="/blog/2010/10/22/now-in-eye-popping-3d/">exactly as before</a>, which looks like this:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2011/12/smallestpolygons.jpg"></p>

<p>When we come to draw the polygons of the next highest granularity you'll see that we have a problem, though. The previous set of polygons have encroached on their territory. To avoid this, each node informs its parents that it is active and then the parent doesn't draw any polygons in the direction of its active children. If we add in the polygons drawn by the each of the other levels of granularity, we now end up with this:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2011/12/filledpolygons.jpg"></p>

<p>Oh no! There's a hole in my landscape! I was actually expecting that my simplistic approach would lead to more or less this result, but it was still a little annoying when it happened. If I was a proper analytical type I would next have sat down and worked over the geometry at play here, then attempted to find a formulation which would prevent this from happening. Instead, though, I stared at it for a good long while, displaying it in various different ways, and waited for something to jump out at me.</p>

<p>Eventually it did, and thankfully it was a very simple rule. Each parent stores a list of the directions in which it has active children in order to prevent overdrawing (as mentioned above). The new rule is that a node is also considered active if this list is non-empty. With this addition, our tessellated landscape now look alike this:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2011/12/backfilledpolygons.jpg"></p>

<p>Presto! A nice simple rule which fills in all of the gaps in the landscape without any over or under simplification, or any overdrawing. I suspect this rule also negates the need for the bounding radius mentioned above, though I have not as yet tested that thought. To recap, we have three simple rules:</p>

<ol>
<li>A node is active if the object space error/distance equation says it is;</li>
<li>A node is active if any of its children are active;</li>
<li>Polygons are tessellated for each active point, but not in the direction of any active children.</li>
</ol>


<p>But what does this look like in actual eye poppingly 3D landscapes? Well, here's an example, using the height based colouring I've used before:</p>

<p><img class="center" src="http://harveynick.files.wordpress.com/2011/12/simplifiedlandscape.jpg"><!-- header_img http://harveynick.files.wordpress.com/2011/12/simplifiedlandscape.jpg --></p>

<p>I'm quite pleased with this, though what I'm doing here is still quite inefficient and in need of some serious tuning. There are a couple of further simplification tricks I can try (including the next step from the (paper) paper). More to come later. Honest.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dogfood, Nom Nom Nom]]></title>
    <link href="http://www.harveynick.com/blog/2011/08/26/dogfood-nom-nom-nom/"/>
    <updated>2011-08-26T09:00:04+01:00</updated>
    <id>http://www.harveynick.com/blog/2011/08/26/dogfood-nom-nom-nom</id>
    <content type="html"><![CDATA[<p>Dog food, the common noun, is reasonably self explanatory (pro tip: it's food for dogs). Dogfood the verb or dogfooding the verbal noun, though, might require a little bit of explanation.</p>

<p>At the root of it is this: if you make dog food, you should feed it to your own dogs. There are essentially two reasons for this:</p>

<ol>
<li>If you don't personally test it, how will know if it's any good?</li>
<li>If your dogs don't eat it, why the hell should anyone else's?</li>
</ol>


<p>The same principle applies to software.</p>

<!-- more -->


<p>Even more so in fact, as it's something you're more able to test directly. As a simple example: in Google, we use Google docs for most documentation purposes (design docs, presentations, etc.). I'm willing to bet that folks at Apple use iWork for much the same purpose. I'm absolutely certain that Microsoft employes use Office, excepting those times when it's necessary to write a document in the blood of a green eyed virgin upon the pressed skin of an albino goat.</p>

<p>This process is called dogfooding. You use the software internally before it's released to users, ensuring that it gets a lot more test usage. As an added bonus, developers who actually use the software they create are more likely to create software that's actually worth using. That's not always the case, of course, since most developers don't really fall into the "average users" category. Case in point: upgrading my computer to Lion broke my installation of Steam. I fixed it with a quick command line incantation, then performed a couple more in order to make <a href="http://www.moddb.com/mods/the-stanley-parable">The Stanley Parable</a> functional under OSX. Most computer users would not be comfortable doing something like this, nor should they have to.</p>

<p>As well as using your company's products at work, it's generally a good idea to use them at home. It's always good to have a feel for what your company actually does and get more experience with it. I've used Google search more or less exclusively for at least ten years. That's not really a hard choice. It gives the best results. Likewise, I started using Google Chrome is my main web browser pretty much as soon as it was available for the platforms I used (in my last job that was actually Windows, OSX and Linux). I use iPhone in preference to Android, however, though I do have an upgrade due me towards the end of the year and it's not completely inconceivable that I might switch. For the time being at least, I'm definitely sticking with Wordpress, so I won't get to play with Blogger, Google Analytics or AdSense, either.</p>

<p>As well as dogfooding Google products at work, we also dogfood technologies and platforms. This sounds fairly obvious, but it's not always the case with companies who create platform technology. Microsoft, for instance, used to be famous for not using the technologies they provided to developers internally, though they are getting better now. Some of Google's technologies are open source, and thus available for everyone to use. <a href="http://code.google.com/p/google-guice/">Guice</a> and <a href="http://code.google.com/p/protobuf/">Protocol Buffers</a> are pretty good examples of this. Guice is amazing, by the way. This being the case, there's nothing to stop me using them on personal projects, should that be appropriate. Personal projects such as Clockwork Aphid, for example.</p>

<p>I'll talk about which particular Google technologies I think might be useful in later blog posts, but since I brought it up, I suppose I should probably say something about Clockwork Aphid. I've blown the dust off the code, tweaked a couple of things and got a feature I'd left half finished back on track. I tried switching my current implementation from jMonkeyEngine version 2 to version 3, only to find that while it does appear a lot faster and improved in several other ways, the documentation is pretty crappy, and it's less… functional.</p>

<p>I'll talk about that more later, but for now just know that things are once again happening.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Features]]></title>
    <link href="http://www.harveynick.com/blog/2011/03/24/features/"/>
    <updated>2011-03-24T10:00:09+00:00</updated>
    <id>http://www.harveynick.com/blog/2011/03/24/features</id>
    <content type="html"><![CDATA[<p>So, in my <a href="http://harveynick.wordpress.com/2011/03/14/brave-new-worlds/">last post</a> I remarked that for procedurally generated landscapes to be interesting, they would need features. But what sort of features was I talking about? Population centres, in particular, tend to to be found close to certain kinds of... things. The first of these which always comes to my mind is the "defensible position." Something like, say, Edinburgh Castle.</p>

<!-- more -->


<p><a href="http://en.wikipedia.org/wiki/Edinburgh_Castle"><img class="center" src="http://upload.wikimedia.org/wikipedia/en/8/88/Holiday043.jpg"><!-- header_img http://upload.wikimedia.org/wikipedia/en/8/88/Holiday043.jpg --></a></p>

<p>A lot of the truly great cities in Europe tend to centre around castles, but you don't tend to find castles just plonked anywhere on the landscape. Edinburgh Castle is a good example because:</p>

<ol>
<li>I think it looks awesome. Look at the way it seems to just grow out of the rock of those cliffs!</li>
<li>It's pretty much unassailable from every direction but one (I think I mentioned the cliffs);</li>
<li>It's on a raised vantage point with a decent line of sight to just about every direction of approach.</li>
</ol>


<p>It's not the most castle-ey looking castle and it lacks, for instance:</p>

<ol>
<li>A moat;</li>
<li>The sort of tower Rapunzel might hang out in.</li>
</ol>


<p>But I think it makes a reasonable example here. I think this is a good rule of thumb: a castle should look good and be well situated (defensibly speaking).</p>

<p>Another feature which population centres tend to spring up around are harbors. They're very important for trade, thus they attract people. Wikipedia served up a reasonable example:</p>

<p><a href="http://en.wikipedia.org/wiki/Harbor"><img class="center" src="http://upload.wikimedia.org/wikipedia/commons/d/dc/Capri.harbour.from.above.arp.jpg"></a></p>

<p>Rule of thumb number one for a harbor: it should be at the intersection of the land and the sea, ideally. If we're playing in a fantasy sand pit this isn't actually the only option, but that's a story for another day. The nature of the coast is important as well, though. You need reasonably deep water right next to the land, but not too deep. Lastly, and just as importantly: it should provide shelter. The boats in the harbor need to be able to survive the harsh weather the sea sometimes serves up. A sheltered cove with high cliffs to each side sounds about right, no?</p>

<p>The last kind of feature I'm thinking of here is again something quite important to trade: the bridging point. You need to get your trade caravan across the river (or gorge) which separates the harbor and the castle (for example), thus you need to cross the bridge. The bride spans the river at a conveniently narrow point and it's the only one for miles. Thus, the bridge becomes a nexus of activity and a town springs up there. Over time the town increases in size and more bridges get built. Before you know it... BOOM, Florence!</p>

<p><a href="http://en.wikipedia.org/wiki/Ponte_Vecchio"><img class="center" src="http://upload.wikimedia.org/wikipedia/commons/f/f5/Ponte_Vecchio_Vasari.jpg"></a></p>

<p>This is, of course, just the tip of the ice berg. We've not even talked about churches, cathedrals, monasteries, oases, and any number of geological features.</p>

<p>Another question, of course is how to go about actual generating the population centres themselves. Well, I'm going to talk more about this later, when I actually get around to talking some other people doing some procedural content related stuff, but here's a little something to wet your appetite:</p>

<p><iframe src="http://www.youtube.com/embed/MG41yYBD-rE" width="" height="" frameborder="0" allowfullscreen></iframe></p>

<p>Cool, no? More about procedural city generation from me later (I don't want to get too far ahead of myself), but you can read more about this project at this excellent series of <a href="http://www.introversion.co.uk/subversion/">blogs</a>. Start at the beginning, and be ready to loose a good hour of your time.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Brave New Worlds]]></title>
    <link href="http://www.harveynick.com/blog/2011/03/14/brave-new-worlds/"/>
    <updated>2011-03-14T22:48:18+00:00</updated>
    <id>http://www.harveynick.com/blog/2011/03/14/brave-new-worlds</id>
    <content type="html"><![CDATA[<p>If you were writing a taxonomy of stories you might choose books as a good place to start. Flicking your way through the world's libraries, time and the Dewey Decimal System would eventually bring you to the fantasy genre. There is a lot of fantasy writing out there, and you might choose to subdivide it further. A one potential way of cutting it neatly in twain is like so:</p>

<ol>
<li>Stories set in our world;</li>
<li>Stories not set in our world.</li>
</ol>


<p>Simple. Harry Potter, for instance, is set in our world. That's a big part of the appeal. Likewise so are <a href="http://www.amazon.co.uk/Neverwhere-Authors-Preferred-Neil-Gaiman/dp/0755322800/ref=sr_1_1?ie=UTF8&amp;qid=1300142138&amp;sr=8-1">Neverwhere</a>, <a href="http://www.amazon.co.uk/Kraken-China-Mieville/dp/0330492322/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1300142157&amp;sr=1-1">Kracken</a> (if you like'd Neverwhere, you'll want to read this), and most of Stephen King's work. Lord of the Rings is not set in our world. Simple. There are other options, of course. What about the  Chronicles of Narnia, for example (which is set in a world beyond our own)? Or Magic Bites* (which is set in an alternate version of our world)? Clearly we're looking at some shades of grey here as well, but I'm sticking the with the original idea while it still serves my purpose.</p>

<!-- more -->


<p>What is my purpose here, though? Why the ramblings on this most nerdy or genres? Well, I'm thinking about procedurally generated landscapes again, you see. Clearly, if you're generating your landscape procedurally, it's going to be entirely of this world. Existing fantasy landscapes are a good place to look for ideas, then, particularly because they were designed specifically for the purpose of telling stories in.</p>

<p>The quintessential fantasy landscape is, of course, Tolkien's Middle Earth, which looks a lot like this:</p>

<p><a href="http://en.wikipedia.org/wiki/Middle-earth"><img class="center" src="http://war3.incgamers.com/uploads/MiddleEarthRisk792Kofficial1291674287.w3x-1.jpg"><!-- header_img http://war3.incgamers.com/uploads/MiddleEarthRisk792Kofficial1291674287.w3x-1.jpg --></a></p>

<p>That should look vaguely familiar to anyone who's read the films or seen the books (or words to that effect). There's a definite feeling of size there. Clearly we're looking at a chunk of a continent, split into something not unlike countries. It always bothers me on maps like this, though: what about the rest of it?<br/>
There are a couple of well known knock offs of Tolkien's work out there, so why don't we consider a few of those as well? One which used to be close to my heart in my adolescent years is Games Workshop's Warhammer:</p>

<p><a href="http://en.wikipedia.org/wiki/Warhammer_Fantasy_(setting"><img class="center" src="http://www.scenicreflections.com/files/Warhammer_Map_of_the_World_Wallpaper_0495o.jpg"></a>)</p>

<p>Now, it should be quite obvious that the good chaps at GW are knocking off more than just Tolkien here. The Big G / the anthropic principle (depending on your world view) could probably claim some royalties here, because the shape of some of those continents looks very familiar. Grand Cathay, indeed. Now we appear to be looking at close to an entire planet, though, unwrapped using something not unlike the good old Mercator projection (or possibly something more politically correct). I assume so, anyway. It's entirely possible that the Warhammer world is flat.</p>

<p>Another world with more than a bit of Tolkien about it it the World of Warcraft:</p>

<p><a href="http://en.wikipedia.org/wiki/World_of_Warcraft"><img class="center" src="http://world-of-warcraft-gold.com/images/worldofwarcraftmap.jpg"></a></p>

<p>Blizzard have taken no chances, though. This is a world you can actually go wandering about on, virtually speaking. They've made sure there aren't any inviting edges for you to go wandering off. If this isn't the entire of the world, it is at least self contained. That doesn't stop Blizzard causing new continents to pop to surface whenever they need to make new content, of course.</p>

<p>Okay, I'm only going to show one more, then I'll get to the actual point. This is a big one, though, so take a deep breath:</p>

<p><a href="http://shaghaghi.net/wp-content/uploads/2010/11/WesterosMap1.jpg"><img class="center" src="http://shaghaghi.net/wp-content/uploads/2010/11/WesterosMap1.jpg"></a></p>

<p>This is also one you might be less familiar with. If you haven't already, I heartily suggest you take a look at George R R Martin's "A Song of Fire and Ice" series, which starts with "<a href="http://www.amazon.co.uk/Game-Thrones-Song-Fire-Book/dp/000647988X/ref=sr_1_1?ie=UTF8&amp;qid=1300142459&amp;sr=8-1">A Game of Thrones</a>," which is not coincidentally the name of the TV adaption of the books which starts on HBO quite soon. This is probably the best of the four maps I've posted here, thanks to a fairly stupid amount of detail (click on it, I dare you). This detail is evident in the books themselves (which I have to confess are not for the faint of heart) as well. This giant map actually represents only a smallish portion of the world these books are set in. It makes a good illustration though. We have mountain ranges, plains, rivers, cities, castles and so on.</p>

<p>If I'm going to procedurally generate a landscapes to tell stories in, they need to have at least a percentage of this amount of detail. Take "The Neck," the narrow portion of land around halfway up, for example. The fact that the land perceptively narrows here feeds heavily into the plot at several points in the books. This is a choke point which cuts the continent in half. Likewise, "The Eyrie" (<em>shudder</em>) is a fort sitting at the peak of a mountain range. Towns are in places that towns would be placed: bridging point on rivers, sheltered harbors, and so on.</p>

<p>The point is this: my procedurally generated landscapes will need variety, but the right kind of variety. They will need "features." That's the first major problem I'm going to need to work on once the basic engine is in place, but first I need to make a decision: should this be done top down, or bottom up? Or some combination of the two?<br/>
First, though, I need some terrain simplification and some unit tests. The unit tests I'm actually quite looking forward to doing (oddly), since I'm going to try doing them in Groovy.</p>

<p>PS I wanted to include the world from Brandon Sanderson's utterly spectacular "Mistborn" series here as well, but I couldn't find a good map online. These books are truly awesome, though. As well as been part of a series, each actually stands alone and completes it's own story, unlike the fast majority series in the fantasy genre. Seriously. <a href="http://www.amazon.co.uk/Final-Empire-Mistborn-Book-One/dp/0575089911/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1300142644&amp;sr=1-1">Read them</a>.</p>

<p>* Confession: I enjoyed this book, even if there is a gramatical error in the first sentence. The very first sentence.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Elephant in the Room]]></title>
    <link href="http://www.harveynick.com/blog/2010/12/07/the-elephant-in-the-room/"/>
    <updated>2010-12-07T11:00:33+00:00</updated>
    <id>http://www.harveynick.com/blog/2010/12/07/the-elephant-in-the-room</id>
    <content type="html"><![CDATA[<p>Since I haven't been able to do any actual work on my Clockwork Aphid project as of late, I suppose I may as well talk about the background behind it a little more. Those who talk about it the most are the ones doing it the least, and all that. I've spoken a little about virtual worlds before and focussed <a href="http://harveynick.wordpress.com/2010/10/08/wow-oh-wow/">almost entirely</a> on World of Warcraft, because it's a the big one. It's not the only MMORPG, and it definitely wasn't the first. It is the one that I have most experience with, and statistically the one most other people are likely to have experience with, as well.</p>

<p>There are several other virtual worlds I really should talk about, but the elephant in the room is another extremely large, and very notable, virtual world. One which has double relevance, because I've made an oblique reference to it already in <a href="http://harveynick.wordpress.com/2010/10/19/youre-speaking-my-landscape-baby/">another post</a>.</p>

<!-- more -->


<p>This is a virtual world whose currency has an exchange rate with the real world, and sale of virtual goods within this world has turned people into real life millionaires. There exist architectural practices whose <a href="http://acs.anshechung.com/index.php?cmd=portfolios">entire portfolio</a> exists "in world." Sweden, among several other countries, has an <a href="http://www.sweden.se/eng/Home/Lifestyle/Reading/Second-Life/">embassy</a> in this virtual world, and presumably pays staff to work there. Several musicians have given live concerts there (don't ask me how that works). This virtual world is not itself a game (as you may have gathered), but it has the infrastructure which has allowed people to build games inside it. Despite all this, though, it has a reputation of, for want of a better word, lameness.</p>

<p>This is, in and of itself, slightly frustrating, because I can't help feeling that it could be awesome. It should be awesome. It bears more than a passing resemblance to the "Metaverse" from Neal Stephenson's fantastic <a href="http://www.amazon.co.uk/Snow-Crash-Neal-Stephenson/dp/0140232923">Snow Crash</a>, you see. I presume you've read Snow Crash? No? Well go and read it. Now. It's okay, I'll wait until you've finished.</p>

<p>Done? Okay, good. Those are some big ideas, right? Yes, I thought she was a little young, too. Anyway. In case you just went right ahead and skipped over my suggestion there, the metaverse can be summarised, thus:</p>

<p><blockquote><p>The <b>Metaverse</b> is our collective online shared space, created by the convergence of virtually enhanced physical reality and physically persistent virtual space, including the sum of all virtual worlds, augmented reality, and the internet.</p><footer><strong>Wikipedia</strong> <cite><a href='http://en.wikipedia.org/wiki/Metaverse'>Metaverse</a></cite></footer></blockquote></p>

<p>I'm talking, of course, about Second Life. If you're not familiar with it, it looks a bit like this:</p>

<p><img class="center" src="https://wiki-land.wikispaces.com/file/view/second_life_2.jpg/142027689/second_life_2.jpg"><!-- header_img https://wiki-land.wikispaces.com/file/view/second_life_2.jpg/142027689/second_life_2.jpg --></p>

<p>One thing you might notice right away is that the graphics have a bit of a low-fi look about them, and there's a reasonably good reason for this*. In our old friend World of Warcraft, the graphics aren't exactly stellar either, but they're much sharper than this. In WoW, by and large, the landscape doesn't really change, unless (topically) a large new expansion is being released with results in sweeping changes to the world. In WoW, when this does happen, the game forces you to download the changes before it lets you start playing. This might be a lot of data (in the order of gigabytes) but it doesn't happen often. As previously noted, the World of Warcraft is essentially static. Not so Second Life, though, as its landscape is built by its users. Just because a location contained an island with the Empire State Building rising out of it yesterday doesn't mean that you won't find a scale replica of the star ship Enterprise there tomorrow. Thus, the content of the game is streamed to the user as they "play," and thus the polygon counts need to be kept reasonably low so that this can happen in a timely fashion. Even so, you might teleport to a new location, only to find that the walls appear ten seconds after the floor, and then suddenly you're standing in the middle of a sofa which wasn't there a second ago.</p>

<p>The issue with second life, for me at least, is that it's not as immersive as I want it to be. I don't feel as though I'm connected to it. I feel restricted by it. There's something cold and dead about it, much like the eyes of the characters in the Polar Express. Something is missing, and I can't quite put my finger on what it is. Also, sometimes the walls appear ten seconds after the floor. That said, it is a fully formed virtual world with a large population and a proven record for acting as a canvas for people's ideas. Given that the point of Clockwork Aphid is to tell stories in a virtual world (I mentioned that, right?), why not tell those stories in Second Life?</p>

<p>This is an idea I'm still exploring, and I keep going backwards and forwards about it, because I'm still not sure if the juice is worth the squeeze. I'd get an awful lot of ready built scope and a huge canvas to play with, but I'm note sure if it's the right type of canvas. This is a canvas which comes with no small number of restrictions, and I would basically be attaching my wagon to a horse which was entirely outside of my control. Mixed metaphors could be the least of my worries. That said, did I mention that people have become millionaires trading inside Second Life? Then again, Second Life doesn't exactly represent a living breathing virtual world, so much as the occasionally grotesque spawn of its users' collective unconsciouses. Sometimes it's not pretty, other times quite impressive results emerge.</p>

<p>Your thoughts are, as always, both welcome and encouraged, below.</p>

<p>* To be fair, the graphics in Second Life are actually a lot better than they used to be.</p>
]]></content>
  </entry>
  
</feed>
